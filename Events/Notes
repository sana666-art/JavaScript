Events in JS
    Events are fired to notify code of "interesting changes" that may affect code execution.
    The change in the state of an object is known as an Event
    Example:
    Mouse events (click, double click etc.)
    Keyboard events (keypress, keyup, keydown)
    Form events (submit etc.)
    Print event & many more

Event Handling in JS
    node.event = ( ) => {
    //handle here
    }
    Example:
    btn.onclick = ( ) => {
    console.log(“btn was clicked”);
    }

Event Object
    It is a special object that has details about the event.  
    All event handlers have access to the Event Object's properties and methods.
    
    node.event = (e) => {
    //handle here
    };
    e.target, e.type, e.clientX, e.clientY

Event Listeners
    node.addEventListener( event, callback )
    node.removeEventListener( event, callback )

    *Note : the callback reference should be same to remove
    
   
the priority of event Handling
    1- JS Handling > inline Handling
    2- from inline Handling, JS Handling and Event Listeners:
        Event Listeners is better way to event handling. becoz, we can call events of same elements multiple time.

















